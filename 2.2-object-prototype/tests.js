describe('Домашнее задание к занятию 2.2 «Прототип и конструктор объекта»', () => {
  describe('Задача №1', () => {
    it('должна возвращать true для "Ароза упала на лапу Азора"', () => {
      expect("А роза упала на лапу Азора".isPalindrome()).toBeTruthy();
    });

    it('должна возвращать true для "Ад гонит иногда"', () => {
      expect("Ад гонит иногда".isPalindrome()).toBeTruthy();
    });

    it('должна возвращать true для "сел лес"', () => {
      expect("сел лес".isPalindrome()).toBeTruthy();
    });

    it('должна возвращать true для "еле-еле"', () => {
      expect("еле-еле".isPalindrome()).toBeTruthy();
    });

    it('должна возвращать false для "еле-еле шёл Емеля!"', () => {
      expect("еле-еле шёл Емеля!".isPalindrome()).toBeFalsy();
    });

    it('должна возвращать false для "Иван Васильевич меняет профессию"', () => {
      expect("Иван Васильевич меняет профессию".isPalindrome()).toBeFalsy();
    });
  });

  describe('Задача №2', () => {
    it('должна возвращать округлённую оценку, кейс #1', () => {
      expect(getAverageMark([2,4,5])).toEqual(4);
    });

    it('должна возвращать округлённую оценку, кейс #2', () => {
      expect(getAverageMark([2,3,5])).toEqual(3);
    });

    it('должна возвращать 0 при отсутствии оценок', () => {
      expect(getAverageMark([])).toEqual(0);
    });
  });

  describe('Задача №3', () => {
    it('должна возвращать истину для взрослого пользователя', () => {
      expect(checkBirthday("1990-01-01")).toBeTruthy();
    });

    it('должна возвращать ложь для молодого пользователя', () => {
      expect(checkBirthday("2020-01-01")).toBeFalsy();
    });
  });
});
